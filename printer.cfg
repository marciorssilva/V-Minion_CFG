
[virtual_sdcard]
path: ~/gcode_files

[include git/*.cfg]

[pause_resume]

[display_status]

[exclude_object]


[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 5000
max_accel_to_decel: 5000
max_z_velocity: 30
max_z_accel: 200
square_corner_velocity: 5.0


[stepper_x]
step_pin: gpio11
dir_pin: gpio10
enable_pin: !gpio12
microsteps: 16
rotation_distance: 40
endstop_pin: ^!gpio25
# endstop_pin: tmc2209_stepper_x:virtual_endstop
# homing_retract_dist: 0
position_endstop: 0
position_max: 180
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
run_current: 1.4
stealthchop_threshold: 999999
# diag_pin: ^gpio4
# driver_SGTHRS: 100

[stepper_y]
step_pin: gpio6
dir_pin: gpio5
enable_pin: !gpio7
microsteps: 16
rotation_distance: 40
endstop_pin: ^gpio3
# endstop_pin: tmc2209_stepper_y:virtual_endstop
# homing_retract_dist: 0
position_endstop: 0
position_max: 180
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
run_current: 1.4
stealthchop_threshold: 999999
diag_pin: ^gpio3
driver_SGTHRS: 100

[stepper_z]
step_pin: gpio19
dir_pin: gpio28
enable_pin: !gpio2
microsteps: 16
rotation_distance: 40
gear_ratio: 80:20
#endstop_pin: ^gpio25
#position_endstop: 0
endstop_pin: probe:z_virtual_endstop
position_min: -2.0
position_max: 155
homing_speed: 12

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
run_current: 0.8
stealthchop_threshold: 999999


#__________________________ PROXIMITY SENSOR ______________________________

[probe]

pin: gpio22
#   Probe detection pin. This parameter must be provided.
x_offset: -30
#   The distance (in mm) between the probe and the nozzle along the
#   x-axis. The default is 0.
y_offset: -13
#   The distance (in mm) between the probe and the nozzle along the
#   y-axis. The default is 0.
#z_offset: 0.50
#   The distance (in mm) between the bed and the nozzle when the probe
#   triggers. This parameter must be provided.
speed: 5
#   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
samples: 2
#   The number of times to probe each point. The probed z-values will
#   be averaged. The default is to probe 1 time.
sample_retract_dist: 5.0
#   The distance (in mm) to lift the toolhead between each sample (if
#   sampling more than once). The default is 2mm.
#lift_speed:
#   Speed (in mm/s) of the Z axis when lifting the probe between
#   samples. The default is to use the same value as the 'speed'
#   parameter.
samples_result: average
#   The calculation method when sampling more than once - either
#   "median" or "average". The default is average.
samples_tolerance: 0.05
#   The maximum Z distance (in mm) that a sample may differ from other
#   samples. If this tolerance is exceeded then either an error is
#   reported or the attempt is restarted (see
#   samples_tolerance_retries). The default is 0.100mm.
samples_tolerance_retries: 3
#   The number of times to retry if a sample is found that exceeds
#   samples_tolerance. On a retry, all current samples are discarded
#   and the probe attempt is restarted. If a valid set of samples are
#   not obtained in the given number of retries then an error is
#   reported. The default is zero which causes an error to be reported
#   on the first sample that exceeds samples_tolerance.
#activate_gcode:
#   A list of G-Code commands to execute prior to each probe attempt.
#   See docs/Command_Templates.md for G-Code format. This may be
#   useful if the probe needs to be activated in some way. Do not
#   issue any commands here that move the toolhead (eg, G1). The
#   default is to not run any special G-Code commands on activation.
#deactivate_gcode:
#   A list of G-Code commands to execute after each probe attempt
#   completes. See docs/Command_Templates.md for G-Code format. Do not
#   issue any commands here that move the toolhead. The default is to
#   not run any special G-Code commands on deactivation.


#_____________________ SAFE Z HOMING ________________________________

[safe_z_home]
home_xy_position: 120,103  
z_hop: 10
z_hop_speed: 50.0


[bed_mesh]
speed: 200
horizontal_move_z: 5
mesh_min: 15, 15
mesh_max: 150, 166.5
probe_count: 5,5
move_check_distance: 5
split_delta_z: .025
fade_start: 1
fade_end: 3
fade_target: 0
#relative_reference_index: 12
#mesh_pps: 2,2
algorithm: bicubic
#bicubic_tension: 0.2


[extruder]
step_pin: gpio14
dir_pin: !gpio13
enable_pin: !gpio15
microsteps: 16
rotation_distance: 22.67895
gear_ratio: 50:10
nozzle_diameter: 0.4
filament_diameter: 1.75
heater_pin: gpio23
sensor_type: EPCOS 100K B57560G104F
sensor_pin: gpio27
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 300
max_extrude_cross_section:2
pressure_advance = 0.07


[tmc2209 extruder]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
run_current: 0.350
stealthchop_threshold: 999999

[filament_switch_sensor runout_sensor]
switch_pin: ^gpio16
pause_on_runout: True

# [filament_motion_sensor smart_sensor]
# switch_pin: ^gpio16
# detection_length: 2.5

[heater_bed]
heater_pin: gpio21
sensor_type: EPCOS 100K B57560G104F
sensor_pin: gpio26
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: gpio18

[heater_fan hotend_fan]
pin: gpio17
heater: extruder
heater_temp: 45.0

[mcu]
# serial: /dev/serial/by-id/usb-Klipper_rp2040_E66094A027854422-if00
serial: /dev/ttyAMA0
restart_method: command

[screws_tilt_adjust]
screw1: 155, 72
screw1_name: Front Right Screw
screw2: 80, 108
screw2_name: Left Screw
screw3: 155, 147
screw3_name: Rear Right Screw
horizontal_move_z: 10
speed: 200
screw_thread: CCW-M4


[virtual_sdcard]
path: ~/gcode_files

[force_move]
enable_force_move: true

#[include mainsail.cfg]

[temperature_sensor raspberry_pi]

sensor_type: temperature_host

min_temp: 10

max_temp: 100

[temperature_sensor mcu_temp]

sensor_type: temperature_mcu

min_temp: 0

max_temp: 100

#[bltouch]
#sensor_pin: gpio22
#control_pin: gpio29

[neopixel board_rgb]
pin: gpio24
chain_count: 1
color_order: GRB
initial_RED: 0.3
initial_GREEN: 0.3
initial_BLUE: 0.3

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 2
; minimum probe count
variable_min_probe_count : 3
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

	{% if bedMeshConfig.probe_count.split(",")|length == 2 %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
        {% else %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% endif %}

	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %}


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(180) %}      #edit to your park position
    {% set y = params.Y|default(180) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 0.705
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.034
#*# pid_ki = 1.388
#*# pid_kd = 79.667
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 63.360
#*# pid_ki = 2.591
#*# pid_kd = 387.288
#*#
#*# [bed_mesh PEI]
#*# version = 1
#*# points =
#*# 	0.132813, 0.106250, 0.079688, 0.081250, 0.067188
#*# 	0.050000, 0.042188, 0.037500, 0.107813, 0.156250
#*# 	-0.021875, 0.007813, 0.037500, 0.070313, 0.110938
#*# 	-0.020312, -0.015625, 0.001563, 0.032813, 0.093750
#*# 	0.046875, 0.029688, 0.043750, 0.059375, 0.089063
#*# tension = 0.2
#*# min_x = 15.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 15.0
#*# x_count = 5
#*# max_y = 160.0
#*# mesh_x_pps = 2
#*# max_x = 150.0
